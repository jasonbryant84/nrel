{"ast":null,"code":"var _jsxFileName = \"/Users/jasonbryant/Desktop/nrel/components/chart.js\";\nvar __jsx = React.createElement;\n// charts/BasicD3.js\nimport * as d3 from 'd3';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types'; // import './App.css';\n// import { drawChart } from './charts/BasicD3';\n// export function drawChart(height, width){\n//     d3.select(\"#chart\")\n//         .append(\"svg\")\n//         .attr(\"width\", width)\n//         .attr(\"height\", height)\n//         .style(\"border\", \"1px solid black\")\n//         .append(\"text\")\n//         .attr(\"fill\", \"green\")\n//         .attr(\"x\", 50)\n//         .attr(\"y\", 50)\n//         .text(\"Hello D3\")\n// }\n\nexport default function Chart(props) {\n  let chartRef = /*#__PURE__*/React.createRef();\n  const {\n    0: data,\n    1: setData\n  } = useState([]),\n        h = 500,\n        w = 400;\n  const accessToRef = d3.select(charRef.current).append('svg').attr('width', w) // w\n  .attr('height', h) // h\n  .style('background-color', '#ffffff').style('padding', 10).style('margin-left', 50);\n  accessToRef.selectAll('rect').data([3, 6, 10, 4]).enter().append('rect').attr('x', (d, i) => i * 70).attr('y', (d, i) => h - 10 * d).attr('width', 65).attr('height', (d, i) => d * 10).attr('fill', 'tomato'); // const drawChart = (height, width) => {\n  //     d3.select(\"#chart\")\n  //         .append(\"svg\")\n  //         .attr(\"width\", width)\n  //         .attr(\"height\", height)\n  //         .style(\"border\", \"1px solid black\")\n  //         .append(\"text\")\n  //         .attr(\"fill\", \"green\")\n  //         .attr(\"x\", 50)\n  //         .attr(\"y\", 50)\n  //         .text(\"Hello D3\")\n  // }\n\n  useEffect(() => {\n    // drawChart()\n    console.log('chartRef', chartRef.current);\n  }, [props.coordsStr]);\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"Graphs with React\"), __jsx(\"div\", {\n    id: \"chart\",\n    ref: chartRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }));\n}\nChart.propTypes = {\n  x: PropTypes.array,\n  y: PropTypes.array,\n  coordsStr: PropTypes.string\n};\nChart.defaultProps = {\n  x: [],\n  y: [],\n  coordsStr: ''\n};","map":{"version":3,"sources":["/Users/jasonbryant/Desktop/nrel/components/chart.js"],"names":["d3","React","Fragment","useEffect","useState","PropTypes","Chart","props","chartRef","createRef","data","setData","h","w","accessToRef","select","charRef","current","append","attr","style","selectAll","enter","d","i","console","log","coordsStr","propTypes","x","array","y","string","defaultProps"],"mappings":";;AAAA;AACA,OAAO,KAAKA,EAAZ,MAAoB,IAApB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,QAArC,QAAqD,OAArD;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjC,MAAIC,QAAQ,gBAAGP,KAAK,CAACQ,SAAN,EAAf;AAEA,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBP,QAAQ,CAAC,EAAD,CAAhC;AAAA,QACIQ,CAAC,GAAG,GADR;AAAA,QAEIC,CAAC,GAAG,GAFR;AAIA,QAAMC,WAAW,GAAGd,EAAE,CAACe,MAAH,CAAUC,OAAO,CAACC,OAAlB,EACfC,MADe,CACR,KADQ,EAEfC,IAFe,CAEV,OAFU,EAEDN,CAFC,EAEE;AAFF,GAGfM,IAHe,CAGV,QAHU,EAGAP,CAHA,EAGG;AAHH,GAIfQ,KAJe,CAIT,kBAJS,EAIW,SAJX,EAKfA,KALe,CAKT,SALS,EAKE,EALF,EAMfA,KANe,CAMT,aANS,EAMM,EANN,CAApB;AAQAN,EAAAA,WAAW,CAACO,SAAZ,CAAsB,MAAtB,EACKX,IADL,CACU,CAAC,CAAD,EAAI,CAAJ,EAAO,EAAP,EAAW,CAAX,CADV,EAEKY,KAFL,GAGKJ,MAHL,CAGY,MAHZ,EAIKC,IAJL,CAIU,GAJV,EAIe,CAACI,CAAD,EAAIC,CAAJ,KAAUA,CAAC,GAAG,EAJ7B,EAKKL,IALL,CAKU,GALV,EAKe,CAACI,CAAD,EAAIC,CAAJ,KAAUZ,CAAC,GAAG,KAAKW,CALlC,EAMKJ,IANL,CAMU,OANV,EAMmB,EANnB,EAOKA,IAPL,CAOU,QAPV,EAOoB,CAACI,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAG,EAPlC,EAQKJ,IARL,CAQU,MARV,EAQkB,QARlB,EAfiC,CAyBjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACZ;AAEAsB,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBlB,QAAQ,CAACS,OAAjC;AACH,GAJQ,EAIN,CAACV,KAAK,CAACoB,SAAP,CAJM,CAAT;AAOA,SACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAK,IAAA,EAAE,EAAC,OAAR;AAAgB,IAAA,GAAG,EAAEnB,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAOH;AAEDF,KAAK,CAACsB,SAAN,GAAkB;AACdC,EAAAA,CAAC,EAAExB,SAAS,CAACyB,KADC;AAEdC,EAAAA,CAAC,EAAE1B,SAAS,CAACyB,KAFC;AAGdH,EAAAA,SAAS,EAAEtB,SAAS,CAAC2B;AAHP,CAAlB;AAMA1B,KAAK,CAAC2B,YAAN,GAAqB;AACjBJ,EAAAA,CAAC,EAAE,EADc;AAEjBE,EAAAA,CAAC,EAAE,EAFc;AAGjBJ,EAAAA,SAAS,EAAE;AAHM,CAArB","sourcesContent":["// charts/BasicD3.js\nimport * as d3 from 'd3';\nimport React, { Fragment, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types'\n\n// import './App.css';\n// import { drawChart } from './charts/BasicD3';\n\n// export function drawChart(height, width){\n//     d3.select(\"#chart\")\n//         .append(\"svg\")\n//         .attr(\"width\", width)\n//         .attr(\"height\", height)\n//         .style(\"border\", \"1px solid black\")\n//         .append(\"text\")\n//         .attr(\"fill\", \"green\")\n//         .attr(\"x\", 50)\n//         .attr(\"y\", 50)\n//         .text(\"Hello D3\")\n// }\n\nexport default function Chart(props) {\n    let chartRef = React.createRef()\n\n    const [data, setData] = useState([]),\n        h = 500,\n        w = 400\n\n    const accessToRef = d3.select(charRef.current)\n        .append('svg')\n        .attr('width', w) // w\n        .attr('height', h) // h\n        .style('background-color', '#ffffff')\n        .style('padding', 10)\n        .style('margin-left', 50)\n\n    accessToRef.selectAll('rect')\n        .data([3, 6, 10, 4])\n        .enter()\n        .append('rect')\n        .attr('x', (d, i) => i * 70)\n        .attr('y', (d, i) => h - 10 * d)\n        .attr('width', 65)\n        .attr('height', (d, i) => d * 10)\n        .attr('fill', 'tomato')\n\n    // const drawChart = (height, width) => {\n    //     d3.select(\"#chart\")\n    //         .append(\"svg\")\n    //         .attr(\"width\", width)\n    //         .attr(\"height\", height)\n    //         .style(\"border\", \"1px solid black\")\n    //         .append(\"text\")\n    //         .attr(\"fill\", \"green\")\n    //         .attr(\"x\", 50)\n    //         .attr(\"y\", 50)\n    //         .text(\"Hello D3\")\n    // }\n\n    useEffect(() => {\n        // drawChart()\n        \n        console.log('chartRef', chartRef.current)\n    }, [props.coordsStr]);\n\n\n    return (\n        <Fragment>\n            <h2>Graphs with React</h2>\n            <div id=\"chart\" ref={chartRef}>\n            </div>\n        </Fragment>\n    );\n}\n\nChart.propTypes = {\n    x: PropTypes.array,\n    y: PropTypes.array,\n    coordsStr: PropTypes.string\n}\n  \nChart.defaultProps = {\n    x: [],\n    y: [],\n    coordsStr: ''\n}"]},"metadata":{},"sourceType":"module"}