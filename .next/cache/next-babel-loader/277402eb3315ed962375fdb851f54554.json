{"ast":null,"code":"var _jsxFileName = \"/Users/jasonbryant/Desktop/nrel/components/chart.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as d3 from 'd3';\nimport React, { Fragment, useEffect, useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { scaleLinear } from 'd3';\nvar accessToRef = null;\nvar months = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec'];\nexport default function Chart(props) {\n  _s();\n\n  var chartRef = /*#__PURE__*/createRef();\n\n  var _useState = useState(false),\n      loadedChart = _useState[0],\n      updateLoadStatus = _useState[1],\n      h_max = Math.max(props.y),\n      data_length = props.y.length,\n      h = 200,\n      w = 400;\n\n  var drawChart = function drawChart() {\n    console.log('data_length', data_length);\n    if (accessToRef != null) accessToRef.selectAll(\"*\").remove();\n\n    if (!loadedChart) {\n      // const xScale = d3.scaleLinear()\n      //     .domain([0, data_length - 1])\n      //     .range([0,w])\n      // const xAxis = d3.axisBottom(xScale)\n      // const yScale = d3.scaleLinear()\n      //     .domain([0, h_max])\n      //     .range([h, 0])\n      // con\n      accessToRef = d3.select(chartRef.current).append('svg').attr('width', w) // w\n      .attr('height', h) // h\n      .style('background-color', '#ffffff').style('padding', 10).style('margin-left', 30).style('overflow', 'visible');\n      updateLoadStatus(true);\n    }\n\n    if (true) {\n      console.log('setting data', props.y);\n      accessToRef.selectAll('rect').data(props.y).enter().append('rect').attr('x', function (d, i) {\n        return i * (w / data_length);\n      }) //\n      .attr('y', function (d, i) {\n        return h - 10 * d;\n      }).attr('width', w / data_length) // 65\n      .attr('height', function (d, i) {\n        return d * 10;\n      }).attr('fill', 'tomato');\n      accessToRef.append(\"text\").attr(\"x\", w / 2).attr(\"y\", h + 30).style('text-anchor', 'middle').text('months');\n      accessToRef.append(\"text\").attr(\"transform\", \"rotate(-90)\").attr(\"y\", -30).attr(\"x\", 0 - h / 2).attr(\"dy\", \"1em\").style(\"text-anchor\", \"middle\").text(\"DNI\"); // X Axis\n\n      var xScale = d3.scaleTime().domain([1, 13]).range([0, w]),\n          xAxis = d3.axisBottom(xScale).ticks(13).tickFormat(d3.format(\"d\"));\n      accessToRef.append('g').attr('transform', \"translate(0, \".concat(h, \")\")).call(xAxis);\n    }\n  };\n\n  useEffect(function () {\n    setTimeout(function () {\n      drawChart();\n    }, 10);\n  }, [props.coordsStr, loadedChart]);\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Average DNI (monthly)\"), __jsx(\"div\", {\n    id: \"chart\",\n    ref: chartRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(Chart, \"RtqllLOUZMfKbUbbR9KMfR4lOQY=\");\n\n_c = Chart;\nChart.propTypes = {\n  x: PropTypes.array,\n  y: PropTypes.array,\n  coordsStr: PropTypes.string\n};\nChart.defaultProps = {\n  x: [],\n  y: [],\n  coordsStr: ''\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/jasonbryant/Desktop/nrel/components/chart.js"],"names":["d3","React","Fragment","useEffect","useState","createRef","PropTypes","scaleLinear","accessToRef","months","Chart","props","chartRef","loadedChart","updateLoadStatus","h_max","Math","max","y","data_length","length","h","w","drawChart","console","log","selectAll","remove","select","current","append","attr","style","data","enter","d","i","text","xScale","scaleTime","domain","range","xAxis","axisBottom","ticks","tickFormat","format","call","setTimeout","coordsStr","propTypes","x","array","string","defaultProps"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\nimport React, { Fragment, useEffect, useState, createRef } from 'react';\nimport PropTypes from 'prop-types'\nimport { scaleLinear } from 'd3';\n\nlet accessToRef = null\n\nconst months = ['jan', 'feb', 'mar', 'apr', 'may', 'jun', 'jul', 'aug', 'sep', 'oct', 'nov', 'dec']\n\nexport default function Chart(props) {\n    let chartRef = createRef()\n\n    const [loadedChart, updateLoadStatus] = useState(false),\n        h_max = Math.max(props.y),\n        data_length = props.y.length,\n        h = 200,\n        w = 400\n\n    const drawChart = () => {\n\n        console.log('data_length', data_length)\n        if(accessToRef != null)\n            accessToRef.selectAll(\"*\").remove()\n\n        if(!loadedChart) {\n            // const xScale = d3.scaleLinear()\n            //     .domain([0, data_length - 1])\n            //     .range([0,w])\n            // const xAxis = d3.axisBottom(xScale)\n\n            // const yScale = d3.scaleLinear()\n            //     .domain([0, h_max])\n            //     .range([h, 0])\n            // con\n\n            accessToRef = d3.select(chartRef.current)\n                .append('svg')\n                .attr('width', w) // w\n                .attr('height', h) // h\n                .style('background-color', '#ffffff')\n                .style('padding', 10)\n                .style('margin-left', 30)\n                .style('overflow', 'visible')\n\n                updateLoadStatus(true)\n        }\n\n        if(true) {\n            console.log('setting data', props.y)\n            accessToRef.selectAll('rect')\n                .data(props.y)\n                .enter()\n                .append('rect')\n                .attr('x', (d, i) => i * (w/data_length)) //\n                .attr('y', (d, i) => h - 10 * d)\n                .attr('width', (w/data_length)) // 65\n                .attr('height', (d, i) => d * 10)\n                .attr('fill', 'tomato')\n\n            accessToRef\n                .append(\"text\")\n                .attr(\"x\", w / 2 )\n                .attr(\"y\",  h + 30)\n                .style('text-anchor', 'middle')\n                .text('months');\n            accessToRef\n                .append(\"text\")\n                .attr(\"transform\", \"rotate(-90)\")\n                .attr(\"y\", -30)\n                .attr(\"x\",0 - (h / 2))\n                .attr(\"dy\", \"1em\")\n                .style(\"text-anchor\", \"middle\")\n                .text(\"DNI\"); \n\n            // X Axis\n            const xScale = d3.scaleTime()\n                .domain([1, 13])\n                .range([0, w]),\n            xAxis = d3.axisBottom(xScale)\n                .ticks(13)\n                .tickFormat(d3.format(\"d\"))\n            accessToRef.append('g')\n                .attr('transform', `translate(0, ${h})`) \n                .call(xAxis)\n        }\n    }\n\n    useEffect(() => {\n        setTimeout(()=> {\n            drawChart()\n        }, 10)\n    }, [props.coordsStr, loadedChart]);\n\n\n    return (\n        <Fragment>\n            <h2>Average DNI (monthly)</h2>\n            <div id=\"chart\" ref={chartRef}></div>\n        </Fragment>\n    );\n}\n\nChart.propTypes = {\n    x: PropTypes.array,\n    y: PropTypes.array,\n    coordsStr: PropTypes.string\n}\n  \nChart.defaultProps = {\n    x: [],\n    y: [],\n    coordsStr: ''\n}"]},"metadata":{},"sourceType":"module"}