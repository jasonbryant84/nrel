{"ast":null,"code":"var _jsxFileName = \"/Users/jasonbryant/Desktop/nrel/pages/index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useState, useContext, useEffect, Fragment } from 'react';\nimport styled from 'styled-components';\nimport Chart from '../components/chart';\nconst monthsMap = {\n  'jan': 1,\n  'feb': 2,\n  'mar': 3,\n  'apr': 4,\n  'may': 5,\n  'jun': 6,\n  'jul': 7,\n  'aug': 8,\n  'sep': 9,\n  'oct': 10,\n  'nov': 11,\n  'dec': 12\n};\nexport default function Index() {\n  const {\n    0: lat,\n    1: setLat\n  } = useState(40),\n        {\n    0: lon,\n    1: setLon\n  } = useState(-105),\n        {\n    0: avg_dni,\n    1: setDNI\n  } = useState(Array(12).fill(0)),\n        {\n    0: avg_ghi,\n    1: setGHI\n  } = useState(Array(12).fill(0)),\n        {\n    0: avg_lat_tilt,\n    1: setLatTilt\n  } = useState(Array(12).fill(0)),\n        {\n    0: coordsStr,\n    1: setCoords\n  } = useState('');\n\n  const handleInput = e => {\n    if (e.target.name === 'lat') {\n      setLat(e.target.value);\n    } else if (e.target.name === 'lon') {\n      setLon(e.target.value);\n    } else {\n      console.log(`Unknown input with value: ${e.target.value}`);\n    }\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n\n    const set = json => {\n      let tempDNI = avg_dni,\n          tempGHI = avg_ghi,\n          tempLatTilt = avg_lat_tilt;\n\n      for (const [key, value] of Object.entries(json.outputs.avg_dni.monthly)) {\n        tempDNI[monthsMap[key] - 1] = value;\n        setDNI(tempDNI);\n      }\n\n      for (const [key, value] of Object.entries(json.outputs.avg_ghi.monthly)) {\n        tempGHI[monthsMap[key] - 1] = value;\n        setGHI(tempGHI);\n      }\n\n      for (const [key, value] of Object.entries(json.outputs.avg_lat_tilt.monthly)) {\n        tempLatTilt[monthsMap[key] - 1] = value;\n        setLatTilt(tempLatTilt);\n      }\n    };\n\n    var url = new URL('https://localhost:3000/nrel');\n    url.search = new URLSearchParams({\n      lat,\n      lon\n    });\n    fetch(url).then(res => res.json()).then(json => {\n      set(json);\n      setCoords(`${lat}${lon}`);\n    }).catch(err => {\n      console.error(err);\n    });\n  };\n\n  useEffect(() => {}, [coordsStr]);\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"NREL Data for\"), __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, `Try coodrindates: 40,-105`), __jsx(\"input\", {\n    type: \"text\",\n    name: \"lat\",\n    defaultValue: 40,\n    placeholder: `Latitude`,\n    onChange: e => {\n      handleInput(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"lon\",\n    defaultValue: -105,\n    placeholder: `Latitude`,\n    onChange: e => {\n      handleInput(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    onClick: e => {\n      handleClick(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  }, \"Search\")), coordsStr != '' && __jsx(Chart, {\n    x: [],\n    y: avg_dni,\n    coordsStr: coordsStr,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), __jsx(Link, {\n    href: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"About\")));\n}\nconst Form = styled.form.withConfig({\n  displayName: \"pages__Form\",\n  componentId: \"x4epxo-0\"\n})([\"input{display:block;margin:0 0 20px;border:0;border-bottom:1px solid rgba(0,0,0,.3);&:focus{border:0;}}\"]);","map":{"version":3,"sources":["/Users/jasonbryant/Desktop/nrel/pages/index.js"],"names":["Link","useState","useContext","useEffect","Fragment","styled","Chart","monthsMap","Index","lat","setLat","lon","setLon","avg_dni","setDNI","Array","fill","avg_ghi","setGHI","avg_lat_tilt","setLatTilt","coordsStr","setCoords","handleInput","e","target","name","value","console","log","handleClick","preventDefault","set","json","tempDNI","tempGHI","tempLatTilt","key","Object","entries","outputs","monthly","url","URL","search","URLSearchParams","fetch","then","res","catch","err","error","Form","form"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport { useState, useContext, useEffect, Fragment } from 'react'\nimport styled from 'styled-components'\nimport Chart from '../components/chart'\n\nconst monthsMap = {'jan': 1, 'feb': 2, 'mar': 3, 'apr': 4, 'may': 5, 'jun': 6, 'jul': 7, 'aug': 8, 'sep': 9, 'oct': 10, 'nov': 11, 'dec': 12}\n\nexport default function Index() {\n    const [lat, setLat] = useState(40),\n        [lon, setLon] = useState(-105),\n        [avg_dni, setDNI] = useState(Array(12).fill(0)),\n        [avg_ghi, setGHI] = useState(Array(12).fill(0)),\n        [avg_lat_tilt, setLatTilt] = useState(Array(12).fill(0)),\n        [coordsStr, setCoords] = useState('')\n\n    const handleInput = (e) => {\n        if(e.target.name === 'lat') {\n            setLat(e.target.value)\n        } else if(e.target.name === 'lon'){\n            setLon(e.target.value)\n        } else {\n            console.log(`Unknown input with value: ${e.target.value}`)\n        }\n    }\n\n    const handleClick = (e) => {\n        e.preventDefault()\n\n        const set = (json) => {\n            let tempDNI = avg_dni,\n                tempGHI = avg_ghi,\n                tempLatTilt = avg_lat_tilt\n\n            for (const [key, value] of Object.entries(json.outputs.avg_dni.monthly)) {\n                tempDNI[monthsMap[key]-1] = value\n                setDNI(tempDNI)\n            }\n            for (const [key, value] of Object.entries(json.outputs.avg_ghi.monthly)) {\n                tempGHI[monthsMap[key]-1] = value\n                setGHI(tempGHI)\n            }\n            for (const [key, value] of Object.entries(json.outputs.avg_lat_tilt.monthly)) {\n                tempLatTilt[monthsMap[key]-1] = value\n                setLatTilt(tempLatTilt)\n            }\n        }\n\n        var url = new URL('https://localhost:3000/nrel')\n        url.search = new URLSearchParams({ lat, lon })\n\n        fetch(url)\n            .then(res => res.json())\n            .then(json => {\n                set(json)\n                setCoords(`${lat}${lon}`)\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    useEffect(() => {\n        \n    }, [coordsStr])\n\n\n    return(      \n        <Fragment>\n            <h3>NREL Data for</h3>\n            <Form>\n                <p>{`Try coodrindates: 40,-105`}</p>\n                <input type=\"text\" name=\"lat\" defaultValue={40} placeholder={`Latitude`} onChange={(e)=> { handleInput(e) }} />\n                <input type=\"text\" name=\"lon\" defaultValue={-105} placeholder={`Latitude`} onChange={(e)=> { handleInput(e) }} />\n                <button type=\"button\" onClick={(e) => { handleClick(e) }}>Search</button>\n            </Form>\n\n            { coordsStr != '' && \n                <Chart x={[]} y={avg_dni} coordsStr={coordsStr} />\n            }\n\n            <Link href='/about'>\n            <a>About</a>\n            </Link>\n        </Fragment>\n    )\n}\n\nconst Form = styled.form`\n    input {\n        display: block;\n        margin: 0 0 20px;\n        border: 0;\n        border-bottom: 1px solid rgba(0,0,0,.3);\n\n        &:focus {\n            border: 0;\n        }\n    }\n`"]},"metadata":{},"sourceType":"module"}