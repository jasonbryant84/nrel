{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/jasonbryant/Desktop/nrel/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useState, useContext, useEffect, Fragment } from 'react';\nimport styled from 'styled-components';\nimport Chart from '../components/chart';\nvar monthsMap = {\n  'jan': 1,\n  'feb': 2,\n  'mar': 3,\n  'apr': 4,\n  'may': 5,\n  'jun': 6,\n  'jul': 7,\n  'aug': 8,\n  'sep': 9,\n  'oct': 10,\n  'nov': 11,\n  'dec': 12\n};\nexport default function Index() {\n  _s();\n\n  var _useState = useState(40),\n      lat = _useState[0],\n      setLat = _useState[1],\n      _useState2 = useState(-105),\n      lon = _useState2[0],\n      setLon = _useState2[1],\n      _useState3 = useState(Array(12).fill(0)),\n      avg_dni = _useState3[0],\n      setDNI = _useState3[1],\n      _useState4 = useState(Array(12).fill(0)),\n      avg_ghi = _useState4[0],\n      setGHI = _useState4[1],\n      _useState5 = useState(Array(12).fill(0)),\n      avg_lat_tilt = _useState5[0],\n      setLatTilt = _useState5[1];\n\n  var handleInput = function handleInput(e) {\n    if (e.target.name === 'lat') {\n      setLat(e.target.value);\n    } else if (e.target.name === 'lon') {\n      setLon(e.target.value);\n    } else {\n      console.log(\"Unknown input with value: \".concat(e.target.value));\n    }\n  };\n\n  var handleClick = function handleClick(e) {\n    e.preventDefault();\n    console.log('test here ');\n    console.log(avg_dni);\n\n    var set = function set(json) {\n      for (var _i = 0, _Object$entries = Object.entries(json.outputs.avg_dni.monthly); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            key = _Object$entries$_i[0],\n            value = _Object$entries$_i[1];\n\n        var temp = avg_dni;\n        temp[monthsMap[key] - 1] = value;\n        setDNI(temp);\n      }\n\n      for (var _i2 = 0, _Object$entries2 = Object.entries(json.outputs.avg_ghi.monthly); _i2 < _Object$entries2.length; _i2++) {\n        var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i2], 2),\n            _key = _Object$entries2$_i[0],\n            _value = _Object$entries2$_i[1];\n\n        var _temp = avg_ghi;\n        avg_ghi[monthsMap[_key] - 1] = _value;\n        setGHI(_temp);\n      }\n\n      for (var _i3 = 0, _Object$entries3 = Object.entries(json.outputs.avg_lat_tilt.monthly); _i3 < _Object$entries3.length; _i3++) {\n        var _Object$entries3$_i = _slicedToArray(_Object$entries3[_i3], 2),\n            _key2 = _Object$entries3$_i[0],\n            _value2 = _Object$entries3$_i[1];\n\n        var _temp2 = avg_lat_tilt;\n        avg_lat_tilt[monthsMap[_key2] - 1] = _value2;\n        setLatTilt(_temp2);\n      }\n    };\n\n    var url = new URL('https://localhost:3000/nrel');\n    url.search = new URLSearchParams({\n      lat: lat,\n      lon: lon\n    });\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      // console.log(json)\n      set(json);\n    })[\"catch\"](function (err) {\n      console.error(err);\n    });\n  };\n\n  useEffect(function () {\n    console.log('avg_dni changed');\n    setTimeout(function () {\n      console.log('avg_dni', avg_dni);\n    }, 1000);\n  }, [avg_dni, avg_ghi, avg_lat_tilt]);\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"NREL Data for\"), __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, \"Try {40,-105}\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"lat\",\n    defaultValue: 40,\n    placeholder: \"Latitude\",\n    onChange: function onChange(e) {\n      handleInput(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"lon\",\n    defaultValue: -105,\n    placeholder: \"Latitude\",\n    onChange: function onChange(e) {\n      handleInput(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    onClick: function onClick(e) {\n      handleClick(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 17\n    }\n  }, \"Search\")), __jsx(Chart, {\n    x: [],\n    y: avg_dni,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }), __jsx(Link, {\n    href: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }, \"About\")));\n}\n\n_s(Index, \"nwuLj46iHS/0cCK89eCEH9wRGM0=\");\n\n_c = Index;\nvar Form = styled.form.withConfig({\n  displayName: \"pages__Form\",\n  componentId: \"x4epxo-0\"\n})([\"input{display:block;margin:0 0 20px;border:0;border-bottom:1px solid rgba(0,0,0,.3);&:focus{border:0;}}\"]);\n_c2 = Form;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Form\");","map":{"version":3,"sources":["/Users/jasonbryant/Desktop/nrel/pages/index.js"],"names":["Link","useState","useContext","useEffect","Fragment","styled","Chart","monthsMap","Index","lat","setLat","lon","setLon","Array","fill","avg_dni","setDNI","avg_ghi","setGHI","avg_lat_tilt","setLatTilt","handleInput","e","target","name","value","console","log","handleClick","preventDefault","set","json","Object","entries","outputs","monthly","key","temp","url","URL","search","URLSearchParams","fetch","then","res","err","error","setTimeout","Form","form"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport { useState, useContext, useEffect, Fragment } from 'react'\nimport styled from 'styled-components'\nimport Chart from '../components/chart'\n\nconst monthsMap = {'jan': 1, 'feb': 2, 'mar': 3, 'apr': 4, 'may': 5, 'jun': 6, 'jul': 7, 'aug': 8, 'sep': 9, 'oct': 10, 'nov': 11, 'dec': 12}\n\nexport default function Index() {\n    const [lat, setLat] = useState(40),\n        [lon, setLon] = useState(-105),\n        [avg_dni, setDNI] = useState(Array(12).fill(0)),\n        [avg_ghi, setGHI] = useState(Array(12).fill(0)),\n        [avg_lat_tilt, setLatTilt] = useState(Array(12).fill(0))\n\n    const handleInput = (e) => {\n        if(e.target.name === 'lat') {\n            setLat(e.target.value)\n        } else if(e.target.name === 'lon'){\n            setLon(e.target.value)\n        } else {\n            console.log(`Unknown input with value: ${e.target.value}`)\n        }\n    }\n\n    const handleClick = (e) => {\n        e.preventDefault()\n        console.log('test here ')\n        console.log(avg_dni)\n\n        const set = (json) => {\n            for (const [key, value] of Object.entries(json.outputs.avg_dni.monthly)) {\n                const temp = avg_dni\n                temp[monthsMap[key]-1] = value\n                setDNI(temp)\n            }\n            for (const [key, value] of Object.entries(json.outputs.avg_ghi.monthly)) {\n                const temp = avg_ghi\n                avg_ghi[monthsMap[key]-1] = value\n                setGHI(temp)\n            }\n            for (const [key, value] of Object.entries(json.outputs.avg_lat_tilt.monthly)) {\n                const temp = avg_lat_tilt\n                avg_lat_tilt[monthsMap[key]-1] = value\n                setLatTilt(temp)\n            }\n        }\n\n        var url = new URL('https://localhost:3000/nrel')\n        url.search = new URLSearchParams({ lat, lon })\n\n        fetch(url)\n            .then(res => res.json())\n            .then(json => {\n                // console.log(json)\n                set(json)\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    useEffect(() => {\n        console.log('avg_dni changed')\n\n        setTimeout(()=> {\n            console.log('avg_dni', avg_dni)\n        }, 1000)\n    },[avg_dni, avg_ghi, avg_lat_tilt])\n\n\n    return(      \n        <Fragment>\n            <h3>NREL Data for</h3>\n            {/* <p>Latitude {data.inputs.lat} Longitude {data.inputs.lon}</p> */}\n            {/* <p>{data.outputs.avg_dni.monthly}</p> */}\n            <Form>\n                <p>{`Try {40,-105}`}</p>\n                <input type=\"text\" name=\"lat\" defaultValue={40} placeholder={`Latitude`} onChange={(e)=> { handleInput(e) }} />\n                <input type=\"text\" name=\"lon\" defaultValue={-105} placeholder={`Latitude`} onChange={(e)=> { handleInput(e) }} />\n                <button type=\"button\" onClick={(e) => { handleClick(e) }}>Search</button>\n            </Form>\n            <Chart x={[]} y={avg_dni} />\n            <Link href='/about'>\n            <a>About</a>\n            </Link>\n        </Fragment>\n    )\n}\n\nconst Form = styled.form`\n    input {\n        display: block;\n        margin: 0 0 20px;\n        border: 0;\n        border-bottom: 1px solid rgba(0,0,0,.3);\n\n        &:focus {\n            border: 0;\n        }\n    }\n`"]},"metadata":{},"sourceType":"module"}