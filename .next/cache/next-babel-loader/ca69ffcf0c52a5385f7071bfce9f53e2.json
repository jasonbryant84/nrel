{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/Users/jasonbryant/Desktop/nrel/pages/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Link from 'next/link';\nimport { useState, useContext, useEffect, Fragment } from 'react';\nimport styled from 'styled-components';\nvar monthsMap = {\n  'jan': 1,\n  'feb': 2,\n  'mar': 3,\n  'apr': 4,\n  'may': 5,\n  'jun': 6,\n  'jul': 7,\n  'aug': 8,\n  'sep': 9,\n  'oct': 10,\n  'nov': 11,\n  'dec': 12\n},\n    avg_dni = Array(12).fill(null),\n    avg_ghi = [],\n    avg_lat_tilt = [];\nexport default function Index() {\n  _s();\n\n  var _useState = useState(40),\n      lat = _useState[0],\n      setLat = _useState[1];\n\n  var _useState2 = useState(-105),\n      lon = _useState2[0],\n      setLon = _useState2[1];\n\n  var handleInput = function handleInput(e) {\n    if (e.target.name === 'lat') {\n      setLat(e.target.value);\n    } else if (e.target.name === 'lon') {\n      setLon(e.target.value);\n    } else {\n      console.log(\"Unknown input with value: \".concat(e.target.value));\n    }\n  };\n\n  var handleClick = function handleClick(e) {\n    e.preventDefault();\n\n    var set = function set(json) {\n      console.log('setting', json.outputs.avg_dni);\n\n      for (var _i = 0, _Object$entries = Object.entries(json.outputs.avg_dni.monthly); _i < _Object$entries.length; _i++) {\n        var _Object$entries$_i = _slicedToArray(_Object$entries[_i], 2),\n            key = _Object$entries$_i[0],\n            value = _Object$entries$_i[1];\n\n        console.log(\"\".concat(key, \": \").concat(value));\n        avg_dni[monthsMap[key]] = value;\n      }\n\n      console.log('avg_dni', avg_dni);\n    };\n\n    var url = new URL('https://localhost:3000/nrel');\n    url.search = new URLSearchParams({\n      lat: lat,\n      lon: lon\n    });\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (json) {\n      console.log(json);\n      set(json);\n    })[\"catch\"](function (err) {\n      console.error(err);\n    });\n  };\n\n  useEffect(function () {}, []);\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"NREL Data for\"), __jsx(Form, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, \"Try {40,-105}\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"lat\",\n    defaultValue: 40,\n    placeholder: \"Latitude\",\n    onChange: function onChange(e) {\n      handleInput(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"lon\",\n    defaultValue: -105,\n    placeholder: \"Latitude\",\n    onChange: function onChange(e) {\n      handleInput(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }\n  }), __jsx(\"button\", {\n    type: \"button\",\n    onClick: function onClick(e) {\n      handleClick(e);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  }, \"Search\")), __jsx(Link, {\n    href: \"/about\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }\n  }, \"About\")));\n}\n\n_s(Index, \"LPr+Grg1Bl3LZjlrdASM/kx4mng=\");\n\n_c = Index;\nvar Form = styled.form.withConfig({\n  displayName: \"pages__Form\",\n  componentId: \"x4epxo-0\"\n})([\"input{display:block;margin:0 0 20px;border:0;border-bottom:1px solid rgba(0,0,0,.3);&:focus{border:0;}}\"]);\n_c2 = Form;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Index\");\n$RefreshReg$(_c2, \"Form\");","map":{"version":3,"sources":["/Users/jasonbryant/Desktop/nrel/pages/index.js"],"names":["Link","useState","useContext","useEffect","Fragment","styled","monthsMap","avg_dni","Array","fill","avg_ghi","avg_lat_tilt","Index","lat","setLat","lon","setLon","handleInput","e","target","name","value","console","log","handleClick","preventDefault","set","json","outputs","Object","entries","monthly","key","url","URL","search","URLSearchParams","fetch","then","res","err","error","Form","form"],"mappings":"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","sourcesContent":["import Link from 'next/link'\nimport { useState, useContext, useEffect, Fragment } from 'react'\nimport styled from 'styled-components'\n\nconst monthsMap = {'jan': 1, 'feb': 2, 'mar': 3, 'apr': 4, 'may': 5, 'jun': 6, 'jul': 7, 'aug': 8, 'sep': 9, 'oct': 10, 'nov': 11, 'dec': 12},\n    avg_dni = Array(12).fill(null),\n    avg_ghi = [],\n    avg_lat_tilt = []\n\nexport default function Index() {\n    const [lat, setLat] = useState(40)\n    const [lon, setLon] = useState(-105)\n\n    const handleInput = (e) => {\n        if(e.target.name === 'lat') {\n            setLat(e.target.value)\n        } else if(e.target.name === 'lon'){\n            setLon(e.target.value)\n        } else {\n            console.log(`Unknown input with value: ${e.target.value}`)\n        }\n    }\n\n    const handleClick = (e) => {\n        e.preventDefault()\n\n        const set = (json) => {\n            console.log('setting', json.outputs.avg_dni)\n\n            for (const [key, value] of Object.entries(json.outputs.avg_dni.monthly)) {\n                console.log(`${key}: ${value}`)\n                avg_dni[monthsMap[key]] = value\n            }\n            \n            console.log('avg_dni', avg_dni)\n        }\n\n        var url = new URL('https://localhost:3000/nrel')\n        url.search = new URLSearchParams({ lat, lon })\n\n        fetch(url)\n            .then(res => res.json())\n            .then(json => {\n                console.log(json)\n                set(json)\n            })\n            .catch(err => {\n                console.error(err)\n            })\n    }\n\n    useEffect(() => {\n\n    },[])\n\n\n    return(      \n        <Fragment>\n            <h3>NREL Data for</h3>\n            {/* <p>Latitude {data.inputs.lat} Longitude {data.inputs.lon}</p> */}\n            {/* <p>{data.outputs.avg_dni.monthly}</p> */}\n            <Form>\n                <p>{`Try {40,-105}`}</p>\n                <input type=\"text\" name=\"lat\" defaultValue={40} placeholder={`Latitude`} onChange={(e)=> { handleInput(e) }} />\n                <input type=\"text\" name=\"lon\" defaultValue={-105} placeholder={`Latitude`} onChange={(e)=> { handleInput(e) }} />\n                <button type=\"button\" onClick={(e) => { handleClick(e) }}>Search</button>\n            </Form>\n            <Link href='/about'>\n            <a>About</a>\n            </Link>\n        </Fragment>\n    )\n}\n\nconst Form = styled.form`\n    input {\n        display: block;\n        margin: 0 0 20px;\n        border: 0;\n        border-bottom: 1px solid rgba(0,0,0,.3);\n\n        &:focus {\n            border: 0;\n        }\n    }\n`"]},"metadata":{},"sourceType":"module"}