{"ast":null,"code":"var _jsxFileName = \"/Users/jasonbryant/Desktop/nrel/components/chart.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport * as d3 from 'd3';\nimport React, { Fragment, useEffect, useState, createRef } from 'react';\nimport PropTypes from 'prop-types';\nvar accessToRef = null;\nexport default function Chart(props) {\n  _s();\n\n  var chartRef = /*#__PURE__*/createRef();\n\n  var _useState = useState(false),\n      loadedChart = _useState[0],\n      updateLoadStatus = _useState[1],\n      _useState2 = useState([]),\n      data = _useState2[0],\n      setData = _useState2[1],\n      h = 500,\n      w = 400;\n\n  var drawChart = function drawChart() {\n    console.log(loadedChart, accessToRef);\n\n    if (!loadedChart) {\n      accessToRef = d3.select(chartRef.current).append('svg').attr('width', w) // w\n      .attr('height', h) // h\n      .style('background-color', '#ffffff').style('padding', 10).style('margin-left', 50);\n      updateLoadStatus(true);\n    }\n\n    if (accessToRef != null) {\n      console.log('setting data', props.y);\n      accessToRef.selectAll('rect').data(props.y).enter().append('rect').attr('x', function (d, i) {\n        return i * 70;\n      }).attr('y', function (d, i) {\n        return h - 10 * d;\n      }).attr('width', 65).attr('height', function (d, i) {\n        return d * 10;\n      }).attr('fill', 'tomato');\n    }\n  };\n\n  useEffect(function () {\n    drawChart(); // console.log('useEffect chartRef', chartRef.current)\n  }, [props.coordsStr, loadedChart]);\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, \"Graphs with React\"), __jsx(\"div\", {\n    id: \"chart\",\n    ref: chartRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }));\n}\n\n_s(Chart, \"gVIT8qWMfJ2djToJalQPiF4tMNw=\");\n\n_c = Chart;\nChart.propTypes = {\n  x: PropTypes.array,\n  y: PropTypes.array,\n  coordsStr: PropTypes.string\n};\nChart.defaultProps = {\n  x: [],\n  y: [],\n  coordsStr: ''\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"Chart\");","map":{"version":3,"sources":["/Users/jasonbryant/Desktop/nrel/components/chart.js"],"names":["d3","React","Fragment","useEffect","useState","createRef","PropTypes","accessToRef","Chart","props","chartRef","loadedChart","updateLoadStatus","data","setData","h","w","drawChart","console","log","select","current","append","attr","style","y","selectAll","enter","d","i","coordsStr","propTypes","x","array","string","defaultProps"],"mappings":"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","sourcesContent":["import * as d3 from 'd3';\nimport React, { Fragment, useEffect, useState, createRef } from 'react';\nimport PropTypes from 'prop-types'\n\n\nlet accessToRef = null\n\nexport default function Chart(props) {\n    let chartRef = createRef()\n\n    const [loadedChart, updateLoadStatus] = useState(false),\n        [data, setData] = useState([]),\n        h = 500,\n        w = 400\n\n    const drawChart = () => {\n        console.log(loadedChart, accessToRef)\n        if(!loadedChart) {\n            accessToRef = d3.select(chartRef.current)\n                .append('svg')\n                .attr('width', w) // w\n                .attr('height', h) // h\n                .style('background-color', '#ffffff')\n                .style('padding', 10)\n                .style('margin-left', 50)\n\n                updateLoadStatus(true)\n        }\n\n        if(accessToRef != null) {\n            console.log('setting data', props.y)\n            accessToRef.selectAll('rect')\n                .data(props.y)\n                .enter()\n                .append('rect')\n                .attr('x', (d, i) => i * 70)\n                .attr('y', (d, i) => h - 10 * d)\n                .attr('width', 65)\n                .attr('height', (d, i) => d * 10)\n                .attr('fill', 'tomato')\n            }\n    }\n\n    useEffect(() => {\n        drawChart()\n        \n        // console.log('useEffect chartRef', chartRef.current)\n    }, [props.coordsStr, loadedChart]);\n\n\n    return (\n        <Fragment>\n            <h2>Graphs with React</h2>\n            <div id=\"chart\" ref={chartRef}></div>\n        </Fragment>\n    );\n}\n\nChart.propTypes = {\n    x: PropTypes.array,\n    y: PropTypes.array,\n    coordsStr: PropTypes.string\n}\n  \nChart.defaultProps = {\n    x: [],\n    y: [],\n    coordsStr: ''\n}"]},"metadata":{},"sourceType":"module"}